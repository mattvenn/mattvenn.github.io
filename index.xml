<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zero to ASIC</title>
    <link>https://www.zerotoasic.com/</link>
    <description>Recent content on Zero to ASIC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Nov 2020 18:20:59 +0100</lastBuildDate><atom:link href="https://www.zerotoasic.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Floorplan</title>
      <link>https://www.zerotoasic.com/terminology/floorplan/</link>
      <pubDate>Fri, 13 Nov 2020 18:20:59 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/floorplan/</guid>
      <description>The floorplanning stage is where OpenLane decides how big an area we need to fit everything in. All the required standard cells are placed in the bottom left corner, ready for the place and route stage.
All the little rectangles in the centre are called tap cells. They make sure the MOSFETs work correctly by connecting the P doped substrate to ground and the N-wells (that insulate the P-type MOSFETS) to power.</description>
    </item>
    
    <item>
      <title>Node / Process</title>
      <link>https://www.zerotoasic.com/terminology/node/</link>
      <pubDate>Fri, 13 Nov 2020 16:48:16 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/node/</guid>
      <description>The metrics for measuring integration density used to be metal half-pitch and gate length. For a while they were about the same number. This number became known as the node or process number.
The half-pitch refers to half the minimum center-to-center distance spacing (or pitch) between Metal 1 lines.
By 1990s these numbers became uncoupled, and the 130nm node actually has 70nm gates. By 2000, the node number &amp;ldquo;had by then absolutely no meaning&amp;rdquo; (Paolo Gargini.</description>
    </item>
    
    <item>
      <title>Padring</title>
      <link>https://www.zerotoasic.com/terminology/padring/</link>
      <pubDate>Fri, 13 Nov 2020 16:09:29 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/padring/</guid>
      <description>We need to make sure we can package the IC after the wafer has been diced into individual dies.
A common way of packaging ICs is to connect them to a leadframe by bonding tiny wires between the leads of the leadframe and the pads on the die.
The big bond pads around the outside of the IC often include ESD protection diodes, Input/Output drivers and so on.
This picture shows raven, an IC from efabless.</description>
    </item>
    
    <item>
      <title>FPGA</title>
      <link>https://www.zerotoasic.com/terminology/fpga/</link>
      <pubDate>Fri, 13 Nov 2020 15:42:06 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/fpga/</guid>
      <description>An FPGA is quite like an ASIC, but has some major differences.
 Available to buy blank chips cheaply, off-the-shelf Can program your digital design onto them, over and over again Have a very limited set of standard cells - at the least lookup tables, flip-flops, memories. Could include multipliers, memory controllers or other high speed interfaces. No analogue capability Slower than an ASIC  They have a reasonable overlap of the tools required to design for them.</description>
    </item>
    
    <item>
      <title>CMOS</title>
      <link>https://www.zerotoasic.com/terminology/cmos/</link>
      <pubDate>Fri, 13 Nov 2020 13:35:41 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/cmos/</guid>
      <description>https://en.wikipedia.org/wiki/CMOS:
 Complementary Metal Oxide Semiconductor (CMOS) is a type of MOSFET fabrication process that uses complementary and symmetrical pairs of p-type and n-type MOSFETs to build logic functions.
 It is low powered compared to NMOS.
Here is a CMOS inverter showing the complementary N and P type MOSFETs.
And here&amp;rsquo;s how it could be laid out using a tool like Magic</description>
    </item>
    
    <item>
      <title>NMOS</title>
      <link>https://www.zerotoasic.com/terminology/nmos/</link>
      <pubDate>Fri, 13 Nov 2020 13:12:26 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/nmos/</guid>
      <description>NMOS refers to building the standard cells we need for building our IC out of only N-type MOSFETs
Heres how we can build an inverter from only N-type MOSFETS.
   Input Output     0 1   1 0    If the input is low, the gate is not charged and current doesn&amp;rsquo;t flow through the MOSFET. The resistor pulls up the output to make it high.</description>
    </item>
    
    <item>
      <title>WLCSP</title>
      <link>https://www.zerotoasic.com/terminology/wlcsp/</link>
      <pubDate>Fri, 13 Nov 2020 13:03:31 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/wlcsp/</guid>
      <description>This package is very small and cheap to produce. It also has benefits due to the lack of bond wires. Bond wires increase parasitic inductance, and can be a problem for high speed designs.
The downside is that they are very tiny!
The last 5 layers of the Skywater PDK define the layers necessary to build the WLCSP package.</description>
    </item>
    
    <item>
      <title>HDL</title>
      <link>https://www.zerotoasic.com/terminology/hdl/</link>
      <pubDate>Fri, 13 Nov 2020 11:58:32 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/hdl/</guid>
      <description>A Hardware Description Language is used to&amp;hellip; describe hardware! So instead of drawing out an inverter using a tool like Magic we can write a line like this:
input = !output;  Which describes what an inverter does. The ! means invert.
Common HDLs are Verilog and VHDL. There are also higher level languages like nMigen, Migen, chisel, spinal. These are often implemented as a library to a programming language like Python.</description>
    </item>
    
    <item>
      <title>Simulation</title>
      <link>https://www.zerotoasic.com/terminology/simulation/</link>
      <pubDate>Fri, 13 Nov 2020 11:58:01 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/simulation/</guid>
      <description>Simulation lets us see the design working. It&amp;rsquo;s useful for debugging while designing and it can also be used to verify that the design is working correctly.
There are quite a few Open Source simulators available: iverilog, verilator and recently CXXRTL (a good review of CXXRTL by Tom Verbeure).
We provide our HDL design and a testbench and we get back a data dump of the results of the simulation. The data is usually in the form of a VCD (value change dump).</description>
    </item>
    
    <item>
      <title>Foundry</title>
      <link>https://www.zerotoasic.com/terminology/foundry/</link>
      <pubDate>Fri, 13 Nov 2020 11:08:44 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/foundry/</guid>
      <description>Foundry is the fancy semiconductor word for factory. You have to admit, silicon foundry does sound cool.
From Skywater&amp;rsquo;s website
 The SkyWater facility was originally established by Minnesota based Control Data Corporation (CDC) in the 1980s. The CDC fab was acquired by Cypress Semiconductor in 1991. During the Cypress era, the facility was expanded and upgraded multiple times, keeping pace with Moore&amp;rsquo;s Law into the late 2000s and was known for being a US-based production facility that was competitive with Asian-based fabs.</description>
    </item>
    
    <item>
      <title>MPW</title>
      <link>https://www.zerotoasic.com/terminology/mpw/</link>
      <pubDate>Fri, 13 Nov 2020 10:58:24 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/mpw/</guid>
      <description>A Multi Project Wafer is used to reduce the cost of making an ASIC. By using a lot of different designs on the same wafer the Non Recurring Engineering (NRE) costs of making the mask set are shared between all the participants.
Image from EuroPractice
The Google shuttle is an MPW.</description>
    </item>
    
    <item>
      <title>Photolithography</title>
      <link>https://www.zerotoasic.com/terminology/photolithography/</link>
      <pubDate>Fri, 13 Nov 2020 10:57:47 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/photolithography/</guid>
      <description>Sam Zeloof did a great talk about his home IC foundry at the Hackaday Supercon 2019.
  This slide shows an overview of the process:
A series of masks is used to build up a 3 dimensional structure on the wafer.
Each step is fundamentally the same:
 coat the wafer in photo resist bake it use a mask to cover certain areas and use light (often UV) to illuminate the areas not covered develop the mask, which will wash out the areas exposed.</description>
    </item>
    
    <item>
      <title>Doping</title>
      <link>https://www.zerotoasic.com/terminology/doping/</link>
      <pubDate>Fri, 13 Nov 2020 10:39:15 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/doping/</guid>
      <description>Doping is when we add impurities to the extremely pure silicon. This changes the electrochemical properties of the silicon. Silicon is in group 4 of the periodic table. Like Carbon it makes nice solid bonds in 4 directions. By adding elements from the 3rd or 5th columns we can add extra electrons or extra positive charges (holes where there are no electrons).
Image source
The elements we typically use are Boron for p-type (positive holes) doping and Phosphoros or Arsenic for n-type (extra electrons) doping.</description>
    </item>
    
    <item>
      <title>Wafer</title>
      <link>https://www.zerotoasic.com/terminology/wafer/</link>
      <pubDate>Fri, 13 Nov 2020 10:31:47 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/wafer/</guid>
      <description>Silicon is purified to around 99.9999999%! Then it is sliced into very thin round sheets called wafers.
The type used in the Skywater 130nm process is doped to become p-type.
I found these great videos about the birth of the Japanese semiconductor industry. Jump to about 12 minutes in to see how they pull the silicon ingot out of the molten material.
  After the wafers are ready, they can be patterned using the lithographic process, using a series of masks</description>
    </item>
    
    <item>
      <title>Die</title>
      <link>https://www.zerotoasic.com/terminology/die/</link>
      <pubDate>Fri, 13 Nov 2020 10:31:34 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/die/</guid>
      <description>The silicon wafer is usually patterned with the mask set to make hundreds or thousands of the same IC.
Each of these ICs are then cut out of the wafer and are called dies.
The die is then somehow packaged. Often they are mounted to a leadframe and then moulded into a plastic packaging to make them larger and easier to handle.
Leadframe Image from Sergei Frolov
Read more about how the dual in line package was created (DIP) in this Hackaday article</description>
    </item>
    
    <item>
      <title>Netlist</title>
      <link>https://www.zerotoasic.com/terminology/netlist/</link>
      <pubDate>Fri, 13 Nov 2020 10:13:03 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/netlist/</guid>
      <description>A netlist is a machine readable file that contains all the connections between all the components in your design.
They are one of the outputs of a Synthesis tool like Yosys.
These examples are taken from http://www.clifford.at/yosys/screenshots.html
If you have a counter design written in an HDL like Verilog
module counter (clk, rst, en, count); input clk, rst, en; output reg [3:0] count; always @(posedge clk) if (rst) count &amp;lt;= 4&#39;d0; else if (en) count &amp;lt;= count + 4&#39;d1; endmodule  The output netlist can be visualised like this:</description>
    </item>
    
    <item>
      <title>How Much Can We Fit on an ASIC?</title>
      <link>https://www.zerotoasic.com/post/how-much-can-we-fit/</link>
      <pubDate>Thu, 12 Nov 2020 20:00:11 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/post/how-much-can-we-fit/</guid>
      <description>The Google / Skywater shuttle reserves about 10 square mm (10 million square microns) of space for your design.
This comparison that Mohamed from efabless put together shows the various areas (and time to generate the GDS2 files) of some popular designs.
We could fit in about 10 picorv32 RISCV cores!
My designs I currently have 3 designs ready to add to the multi project harness:
   Name Square microns How many would fit?</description>
    </item>
    
    <item>
      <title>VGA clock</title>
      <link>https://www.zerotoasic.com/post/vga_clock/</link>
      <pubDate>Thu, 12 Nov 2020 19:13:04 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/post/vga_clock/</guid>
      <description>This is one of the first projects I hardened using OpenLane
It shows the time on an LCD panel. It will be part of my first tapeout After running the OpenLane ASIC flow, it results in a design that uses 180x180 microns (32000 square microns). As we have about 10e6 square microns in the user project area of the Google shuttle, I could potentially put about 300 of these on the ASIC!</description>
    </item>
    
    <item>
      <title>IC</title>
      <link>https://www.zerotoasic.com/terminology/ic/</link>
      <pubDate>Thu, 12 Nov 2020 17:49:00 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/ic/</guid>
      <description>An Integrated Circuit is a collection of circuit elements all together on one piece of silicon. Example elements include:
 transistors, for example MOSFETS resistors capacitors  Here is an example of an IC, a type of amplifier called an Op-Amp. The image is from zeptobars</description>
    </item>
    
    <item>
      <title>VLSI</title>
      <link>https://www.zerotoasic.com/terminology/vlsi/</link>
      <pubDate>Thu, 12 Nov 2020 17:44:33 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/vlsi/</guid>
      <description>Very Large Scale Integration - this term started getting used in the 70s when millions of MOSFETs were integrated together to make one IC.
This image shows the die of a VLSI IC.
The image is CC BY-SA 3.0 from https://commons.wikimedia.org/w/index.php?curid=1340494</description>
    </item>
    
    <item>
      <title>Verification</title>
      <link>https://www.zerotoasic.com/terminology/verification/</link>
      <pubDate>Thu, 12 Nov 2020 17:44:17 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/verification/</guid>
      <description>Simulation offers us a way of checking the design is doing what we expect, but that is almost exactly why simulation on its own isn&amp;rsquo;t enough. When we simulate we are testing what we expect to happen. The problems happen when your design experiences something outside the expected.
There are a couple of extra tools we can use to increase our confidence that the design will work as designed.
Coverage A coverage tool tests how complete your simulation or verification efforts actually are.</description>
    </item>
    
    <item>
      <title>Google / Skywater Shuttle</title>
      <link>https://www.zerotoasic.com/terminology/shuttle/</link>
      <pubDate>Thu, 12 Nov 2020 17:44:07 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/shuttle/</guid>
      <description>A shuttle service is the same as a multi project wafer.
On 30th June 2020, Tim Ansell announced the collaboration between Google and Skywater to provide a free shuttle service in his FOSSI dialup talk.
  These slides taken from his talk show the overview:
Caravel Normally in an MPW you would have the whole die to yourself. In the Google/Skywater Shuttle all the designs will be within the user project area of the Caravel harness.</description>
    </item>
    
    <item>
      <title>RTL</title>
      <link>https://www.zerotoasic.com/terminology/rtl/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:56 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/rtl/</guid>
      <description>People often use the terms RTL and HDL interchangably.
I see it in a bit of a different way, influenced by Carver &amp;amp; Mead&amp;rsquo;s book &amp;ldquo;Introduction to VLSI systems&amp;rdquo;. It&amp;rsquo;s more of a design methodology.
For reasons of speed and debugging, it makes sense to split up the data processing into smaller steps and buffer the results in registers (small memories usually made up of a stack of flip-flops). As the data flows between registers, it&amp;rsquo;s called register transfer level.</description>
    </item>
    
    <item>
      <title>LVS</title>
      <link>https://www.zerotoasic.com/terminology/lvs/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:29 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/lvs/</guid>
      <description>Layout vs Schematic is an important verification step.
After the design has been finished and we have the GDS2 files that we can send to the foundry, we want to check that the design is the same as the input that was described by the HDL.
In the OpenLane tool, at the end we have the LVS step. The netlist is extracted using Magic A tool called Netgen can compare this extracted netlist with the one we get after the synthesis step.</description>
    </item>
    
    <item>
      <title>STA</title>
      <link>https://www.zerotoasic.com/terminology/sta/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:21 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/sta/</guid>
      <description>Static Timing Analysis helps us to understand how fast we can expect our chip to run.
OpenLane uses a tool called OpenSTA It&amp;rsquo;s job is to analyse the &amp;lsquo;critical paths&amp;rsquo; in the design and then work out how long it will take those paths to propagate a signal.
After OpenLane finishes, we get a report from OpenSTA: reports/synthesis/opensta.min_max.rpt
The required timing is set in the OpenLane config file. By default it&amp;rsquo;s 10ns, which means we are targetting a clock frequency of 100MHz.</description>
    </item>
    
    <item>
      <title>Place and Route</title>
      <link>https://www.zerotoasic.com/terminology/place_and_route/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:12 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/place_and_route/</guid>
      <description>Place and Route are 2 steps in the automated process of turning some HDL into GDS2 files. We will look at how OpenLane does these steps using the seven segment seconds example.
I have used my presentation tools to generate these images.
Place Placement is done in two steps, coarse and fine. The coarse step puts the standard cells in roughly the right place. The file shown is replace.def.
The fine step aligns the cells to the grid and makes sure they don&amp;rsquo;t overlap.</description>
    </item>
    
    <item>
      <title>Synthesis</title>
      <link>https://www.zerotoasic.com/terminology/synthesis/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:01 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/synthesis/</guid>
      <description>Synthesis is kind of analogous to the compiler used for sequential programming languages like C. It reads the HDL and creates a netlist.
It is a very complex and detailed process. Until Claire Wolf wrote yosys, it was thought that only huge semiconducter companies had the resouces to write a synthesis tool.
yosys is the Open Source tool that has been crucial in enabling the Open Source ASIC flow we have in OpenLane.</description>
    </item>
    
    <item>
      <title>DRC</title>
      <link>https://www.zerotoasic.com/terminology/drc/</link>
      <pubDate>Thu, 12 Nov 2020 17:42:51 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/drc/</guid>
      <description>The Design Rule Check is part of the PDK. Both the Magic and OpenLane tools make use of it.
It contains rules that check things like:
 The gate of the MOSFET are the correct length Wires on the metal layers are not too narrow and not too close Check that MOSFET gates are protected if they have long connecting wires.  This last rule is my favourite.
When the ASIC is being built up layer by layer, we have the gates of the MOSFETS built first.</description>
    </item>
    
    <item>
      <title>GDS2</title>
      <link>https://www.zerotoasic.com/terminology/gds2/</link>
      <pubDate>Thu, 12 Nov 2020 17:42:46 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/gds2/</guid>
      <description>GDSII/GDS2 is a binary file format that represents the layers needed to produce an ASIC.
In the OpenLane flow, Magic is used to &amp;lsquo;stream&amp;rsquo; the final GDS2 files.
We can use other programs or even software libraries to generate valid GDS2 files. Here I&amp;rsquo;ve used gdspy to convert the Hackaday logo into GDS2.
You can check the very simple program out here
The Skywater PDK defines all the layers that we can use in the GDS2 files.</description>
    </item>
    
    <item>
      <title>Maskset</title>
      <link>https://www.zerotoasic.com/terminology/maskset/</link>
      <pubDate>Thu, 12 Nov 2020 17:42:33 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/maskset/</guid>
      <description>From Wikipedia:
 A photomask is an opaque plate with holes or transparencies that allow light to shine through in a defined pattern. They are commonly used in photolithography and the production of integrated circuits (ICs or &amp;ldquo;chips&amp;rdquo;) in particular. Masks are used to produce a pattern on a substrate, normally a thin slice of silicon known as a wafer in the case of chip manufacturing. Several masks are used in turn, each one reproducing a layer of the completed design, and together they are known as a mask set.</description>
    </item>
    
    <item>
      <title>Tapeout</title>
      <link>https://www.zerotoasic.com/terminology/tapeout/</link>
      <pubDate>Thu, 12 Nov 2020 17:42:16 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/tapeout/</guid>
      <description>The term &amp;ldquo;tape out&amp;rdquo; was coined in 70&amp;rsquo;s. Historically, the ASIC design files were stored on magnetic tape. The event of carrying out the tape to the foundry was thus called &amp;ldquo;tape out&amp;rdquo;.
Adapted from https://anysilicon.com/semipedia/tape/</description>
    </item>
    
    <item>
      <title>OpenLane</title>
      <link>https://www.zerotoasic.com/terminology/openlane/</link>
      <pubDate>Thu, 12 Nov 2020 17:39:49 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/openlane/</guid>
      <description>OpenLane is an Open Source ASIC tool. You can download it from here. The installation instructions are pretty straight forwards and it takes about 15 minutes and 3GB of disk space.
For a lot of great information on how it works and what it does, please watch Mohamed Shalan&amp;rsquo;s OpenLane FOSSI dialup presentation
Here&amp;rsquo;s the overview:
We put our HDL in at one end, and out the other comes the GDS2 files that are the standard file format for the foundry.</description>
    </item>
    
    <item>
      <title>Magic</title>
      <link>https://www.zerotoasic.com/terminology/magic/</link>
      <pubDate>Thu, 12 Nov 2020 17:39:43 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/magic/</guid>
      <description>From its homepage:
 Magic is a venerable VLSI layout tool, written in the 1980&amp;rsquo;s at Berkeley by John Ousterhout, now famous primarily for writing the scripting interpreter language Tcl. Due largely in part to its liberal Berkeley open-source license, magic has remained popular with universities and small companies. The open-source license has allowed VLSI engineers with a bent toward programming to implement clever ideas and help magic stay abreast of fabrication technology.</description>
    </item>
    
    <item>
      <title>SPICE</title>
      <link>https://www.zerotoasic.com/terminology/spice/</link>
      <pubDate>Thu, 12 Nov 2020 17:39:43 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/spice/</guid>
      <description>SPICE general-purpose, open-source analog electronic circuit simulator. It stands for Simulation Program with Integrated Circuit Emphasis. ngspice is a successor, and is easily installable on Linux. It&amp;rsquo;s the simulator I&amp;rsquo;ve used to explore the Skywater 130 PDK.
Here&amp;rsquo;s an example spice simulation file that I used to simulate the inverter I drew.
Inverter Simulation * this file edited to remove everything not in tt lib .lib &amp;quot;./sky130_fd_pr/models/sky130.lib.spice&amp;quot; tt * instantiate the inverter Xinv Y A VPWR VGND VGND VPWR inverter .</description>
    </item>
    
    <item>
      <title>MOSFET</title>
      <link>https://www.zerotoasic.com/terminology/mosfet/</link>
      <pubDate>Thu, 12 Nov 2020 17:39:16 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/mosfet/</guid>
      <description>A MOSFET is a type of transistor we can use as a digital switch. The name stands for Metal Oxide Silicon Field Effect Transistor. The first MOSFET was made in 1959 by Mohamed M. Atalla &amp;amp; Dawon Kahng.
 Easy to manufacture in volume Easy to change its size It is the basic building block of modern electronics  They are the most manufactured object worldwide: 1.3×10^22 of them have been made between 1960 and 2018 - Wikipedia</description>
    </item>
    
    <item>
      <title>PDK</title>
      <link>https://www.zerotoasic.com/terminology/pdk/</link>
      <pubDate>Thu, 12 Nov 2020 17:38:48 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/pdk/</guid>
      <description>The Process Design Kit is a library of all the specifications that describe a particular factories&#39; particular chip fabrication process.
In our case we have access to the Skywater factories 130 nanometer process, usually called sky130.
Tim Edwards:
 Note that this process is advertised as a &amp;ldquo;hybrid 180nm / 130nm&amp;rdquo;.
A number of aspects are either very close to a 180nm process or somewhere between 180 and 130.
The typical minimum length low-voltage transistor is 150nm.</description>
    </item>
    
    <item>
      <title>Standard cell</title>
      <link>https://www.zerotoasic.com/terminology/standardcell/</link>
      <pubDate>Thu, 12 Nov 2020 17:38:45 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/standardcell/</guid>
      <description>One of the many things a PDK contains is the standard cell library. This is a collection of all the analogue and digital building blocks used to build an IC.
Here are some examples taken from the high density Skywater 130nm standard cell library.
XOR D type Flip Flop Inverter </description>
    </item>
    
    <item>
      <title>ASIC</title>
      <link>https://www.zerotoasic.com/terminology/asic/</link>
      <pubDate>Thu, 12 Nov 2020 17:38:37 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/asic/</guid>
      <description>Application Specific Integrated Circuit
An ASIC is a custom IC. Typically big semiconductor companies produce millions of chips, which offsets the large costs related to the masks. An Application Specific IC is something you design when you need a chip that isn&amp;rsquo;t available off-the-shelf.
Here&amp;rsquo;s a picture from magic showing a layout of my VGA clock
And a zoom, more clearly showing the standard cells</description>
    </item>
    
    <item>
      <title>Macro</title>
      <link>https://www.zerotoasic.com/terminology/macro/</link>
      <pubDate>Thu, 12 Nov 2020 17:06:52 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/macro/</guid>
      <description>From http://88physicaldesign.blogspot.com/2015/10/what-is-macro.html:
 Macros are intellectual properties that you can use in your design. You do not need to design it. For example, memories, processor core, serdes, PLL etc.
 A good example would be memory that&amp;rsquo;s been created by OpenRAM. Typically for larger memories in a design you want to avoid using lots of flip-flops. A memory created from flip-flops is much bigger than something that has been optimised just for data storage.</description>
    </item>
    
    <item>
      <title>Harden</title>
      <link>https://www.zerotoasic.com/terminology/harden/</link>
      <pubDate>Thu, 12 Nov 2020 16:52:36 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/terminology/harden/</guid>
      <description>To harden a macro means to make it into the final format.</description>
    </item>
    
    <item>
      <title>Multi Project Harness</title>
      <link>https://www.zerotoasic.com/post/multi-project-harness/</link>
      <pubDate>Thu, 12 Nov 2020 14:54:58 +0100</pubDate>
      
      <guid>https://www.zerotoasic.com/post/multi-project-harness/</guid>
      <description>I&amp;rsquo;ve been working on the Zero to ASIC multi project harness.
The Google/Skywater Shuttle has about 10 square mm of space for your project. This sounds tiny but is actually HUGE for many beginner projects. Read this post to find out what you could fit in the user space.
For the Zero to ASIC course, I want to aggregate all your designs together into that area, so we need to do some extra bits:</description>
    </item>
    
    <item>
      <title>Hackaday #remoticon talk</title>
      <link>https://www.zerotoasic.com/post/remoticon-talk/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.zerotoasic.com/post/remoticon-talk/</guid>
      <description>I recently presented a demo/presentation for Hackaday&amp;rsquo;s #remoticon.
 talk on twitch slides from the talk presentation tools</description>
    </item>
    
    <item>
      <title>Inverter</title>
      <link>https://www.zerotoasic.com/post/inverter/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.zerotoasic.com/post/inverter/</guid>
      <description>A standard cell is a building block that contains some basic digital or analogue functionality. These blocks are then tiled together to make the final design.
Since finding out about the Skywater PDK, I wanted to try drawing my own &amp;lsquo;standard cell&amp;rsquo; using the Skywater transistor models.
An inverter is one of the simplest and even that was quite difficult! As you can see below it contains an N and P type MOSFET.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://www.zerotoasic.com/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zerotoasic.com/resources/</guid>
      <description>Talks  0 to ASIC #remoticon talk on twitch and slides FOSSi foundation dialup talks  Skywater/Google discussion &amp;amp; announcements  Google/Skywater Slack PDK docs Announce mailing list  Tools  Openlane Magic  Courses  Kunal’s udemy courses  Books  Books: search ‘introduction to VLSI systems’  FPGA  FPGA boards: iCEBreaker, TinyFPGA, Black Ice WTFPGA course  </description>
    </item>
    
    <item>
      <title>Sign up</title>
      <link>https://www.zerotoasic.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.zerotoasic.com/contact/</guid>
      <description>I am working on a course. The specs are not final but this is the rough idea.
Express your interest in the Zero to ASIC course here!
0 to ASIC workshop Design and fabricate your own ASIC! Thanks to the new Open Source Process Development Kit from Google and Skywater along with the latest Open Source ASIC tools from efabless.
GCC revolutionised compiling, Linux revolutionised computing. Arduino revolutionised microcontrollers. RISCV is revolutionising ISAs.</description>
    </item>
    
  </channel>
</rss>
