<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zero to ASIC</title>
    <link>http://www.zerotoasic.com/</link>
    <description>Recent content on Zero to ASIC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Nov 2020 14:54:58 +0100</lastBuildDate><atom:link href="http://www.zerotoasic.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi Project Harness</title>
      <link>http://www.zerotoasic.com/post/multi-project-harness/</link>
      <pubDate>Thu, 12 Nov 2020 14:54:58 +0100</pubDate>
      
      <guid>http://www.zerotoasic.com/post/multi-project-harness/</guid>
      <description>I&amp;rsquo;ve been working on the multi project harness. Normally in a multi project wafer you would have the entire space for your own design.
The Google/Skywater Shuttle is a bit different. First of all, there is the Caravel harness, which even has its own datasheet
For this course, I want to put all your designs together into that area, so we need to do some extra bits:
 hold all the designs except 1 in reset connect all the inputs and outputs make sure the inputs and outputs don&amp;rsquo;t clash with each other connect important signals like clocks and make sure the tools know they are special  Then there will need to be a bit of firmware on the SoC that sets up the GPIOs for each design.</description>
    </item>
    
    <item>
      <title>Hackaday #remoticon talk</title>
      <link>http://www.zerotoasic.com/post/remoticon-talk/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.zerotoasic.com/post/remoticon-talk/</guid>
      <description>I recently presented a demo/presentation for Hackaday&amp;rsquo;s #remoticon.
 talk on twitch slides from the talk</description>
    </item>
    
    <item>
      <title>Inverter speedrun</title>
      <link>http://www.zerotoasic.com/post/inverter/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.zerotoasic.com/post/inverter/</guid>
      <description>A standard cell is a building block that contains some basic digital or analogue functionality. For example an NAND gate, a flip-flop, an inverter. These blocks are then tiled together to make the final design.
Since finding out about the Skywater PDK, I wanted to try drawing my own &amp;lsquo;standard cell&amp;rsquo; using the Skywater transistor models.
An inverter is one of the simplest and even that was quite difficult! As you can see below it contains an N and P type MOSFET.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>http://www.zerotoasic.com/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.zerotoasic.com/resources/</guid>
      <description> 0 to ASIC #remoticon talk on twitch slides from the talk FOSSi foundation dialup https://www.youtube.com/playlist?list=PLUg3wIOWD8yoZCg9XpFSgEgljx6MSdm9L Slack channels https://slack.skywater.tools/ PDK docs: https://skywater-pdk.readthedocs.io/en/latest/ Openlane: https://github.com/efabless/openlane Kunal’s udemy courses https://www.udemy.com/course/vlsi-academy-custom-layout/ Books: search ‘introduction to VLSI systems’ FPGA boards: TinyFPGA, icebreaker, WTFPGA course: https://github.com/esden/WTFpga https://github.com/mattvenn/remoticon-presentation-tools https://github.com/mattvenn/magic-inverter https://github.com/mattvenn/seven-segment-seconds  </description>
    </item>
    
    <item>
      <title>Sign up</title>
      <link>http://www.zerotoasic.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.zerotoasic.com/contact/</guid>
      <description>I am working on a course. The specs are not final but this is the rough idea.
0 to ASIC workshop Design and fabricate your own ASIC! Thanks to the new Open Source Process Development Kit (PDK) from Google and Skywater along with the latest Open Source ASIC tools from efabless.
GCC revolutionised compiling, Linux revolutionised computing. Arduino revolutionised microcontrollers. RISCV is revolutionising ISAs. The next step is Open Source Silicon.</description>
    </item>
    
  </channel>
</rss>
